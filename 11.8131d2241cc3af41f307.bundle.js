(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{1015:function(e,t){},1046:function(e,t,i){"use strict";var n=i(945),o=i(946),r=i(948),a=i(947),s=i(958),l=i(949),c=i(1030),u=i(1005),d=i(1294),p=i(1136),g=i(1071);i.d(t,"a",(function(){return v}));var h=d.a.fp64LowPart,f=[0,0,0,255],y={radiusScale:{type:"number",min:0,value:1},radiusMinPixels:{type:"number",min:0,value:0},radiusMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},lineWidthUnits:"meters",lineWidthScale:{type:"number",min:0,value:1},lineWidthMinPixels:{type:"number",min:0,value:0},lineWidthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},stroked:!1,fp64:!1,filled:!0,getPosition:{type:"accessor",value:function(e){return e.position}},getRadius:{type:"accessor",value:1},getFillColor:{type:"accessor",value:f},getLineColor:{type:"accessor",value:f},getLineWidth:{type:"accessor",value:1},strokeWidth:{deprecatedFor:"getLineWidth"},outline:{deprecatedFor:"stroked"},getColor:{deprecatedFor:["getFillColor","getLineColor"]}},v=function(e){function t(){return Object(n.a)(this,t),Object(r.a)(this,Object(a.a)(t).apply(this,arguments))}return Object(l.a)(t,e),Object(o.a)(t,[{key:"getShaders",value:function(e){return{vs:"#define SHADER_NAME scatterplot-layer-vertex-shader\n\nattribute vec3 positions;\n\nattribute vec3 instancePositions;\nattribute vec2 instancePositions64xyLow;\nattribute float instanceRadius;\nattribute float instanceLineWidths;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float radiusScale;\nuniform float radiusMinPixels;\nuniform float radiusMaxPixels;\nuniform float lineWidthScale;\nuniform float lineWidthMinPixels;\nuniform float lineWidthMaxPixels;\nuniform float stroked;\nuniform bool filled;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\n\nvoid main(void) {\n  float outerRadiusPixels = clamp(\n    project_size_to_pixel(radiusScale * instanceRadius),\n    radiusMinPixels, radiusMaxPixels\n  );\n  float lineWidthPixels = clamp(\n    project_size_to_pixel(lineWidthScale * instanceLineWidths),\n    lineWidthMinPixels, lineWidthMaxPixels\n  );\n  outerRadiusPixels += stroked * lineWidthPixels / 2.0;\n  unitPosition = positions.xy;\n\n  innerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;\n  \n  vec3 offset = positions * project_pixel_size(outerRadiusPixels);\n  gl_Position = project_position_to_clipspace(instancePositions, instancePositions64xyLow, offset);\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity) / 255.;\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity) / 255.;\n  picking_setPickingColor(instancePickingColors);\n}\n",fs:"#define SHADER_NAME scatterplot-layer-fragment-shader\n\nprecision highp float;\n\nuniform bool filled;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\n\nvoid main(void) {\n\n  float distToCenter = length(unitPosition);\n\n  if (distToCenter > 1.0) {\n    discard;\n  } \n  if (distToCenter > innerUnitRadius) {\n    gl_FragColor = vLineColor;\n  } else if (filled) {\n    gl_FragColor = vFillColor;\n  } else {\n    discard;\n  }\n  gl_FragColor = picking_filterHighlightColor(gl_FragColor);\n  gl_FragColor = picking_filterPickingColor(gl_FragColor);\n}\n",modules:[this.use64bitProjection()?"project64":"project32","picking"]}}},{key:"initializeState",value:function(){this.getAttributeManager().addInstanced({instancePositions:{size:3,transition:!0,accessor:"getPosition"},instancePositions64xyLow:{size:2,accessor:"getPosition",update:this.calculateInstancePositions64xyLow},instanceRadius:{size:1,transition:!0,accessor:"getRadius",defaultValue:1},instanceFillColors:{size:4,transition:!0,type:5121,accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:4,transition:!0,type:5121,accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}},{key:"updateState",value:function(e){var i=e.props,n=e.oldProps,o=e.changeFlags;if(Object(s.a)(Object(a.a)(t.prototype),"updateState",this).call(this,{props:i,oldProps:n,changeFlags:o}),i.fp64!==n.fp64){var r=this.context.gl;this.state.model&&this.state.model.delete(),this.setState({model:this._getModel(r)}),this.getAttributeManager().invalidateAll()}}},{key:"draw",value:function(e){var t=e.uniforms,i=this.context.viewport,n=this.props,o=n.radiusScale,r=n.radiusMinPixels,a=n.radiusMaxPixels,s=n.stroked,l=n.filled,c=n.lineWidthUnits,u=n.lineWidthScale,d=n.lineWidthMinPixels,p=n.lineWidthMaxPixels,g="pixels"===c?i.distanceScales.metersPerPixel[2]:1;this.state.model.setUniforms(Object.assign({},t,{stroked:s?1:0,filled:l,radiusScale:o,radiusMinPixels:r,radiusMaxPixels:a,lineWidthScale:u*g,lineWidthMinPixels:d,lineWidthMaxPixels:p})).draw()}},{key:"_getModel",value:function(e){return new p.a(e,Object.assign(this.getShaders(),{id:this.props.id,geometry:new g.a({drawMode:6,vertexCount:4,attributes:{positions:{size:3,value:new Float32Array([-1,-1,0,-1,1,0,1,1,0,1,-1,0])}}}),isInstanced:!0,shaderCache:this.context.shaderCache}))}},{key:"calculateInstancePositions64xyLow",value:function(e,t){var i=t.startRow,n=t.endRow,o=this.use64bitPositions();if(e.constant=!o,o){var r=this.props,a=r.data,s=r.getPosition,l=e.value,u=i*e.size,d=Object(c.a)(a,i,n),p=d.iterable,g=d.objectInfo,f=!0,y=!1,v=void 0;try{for(var m,b=p[Symbol.iterator]();!(f=(m=b.next()).done);f=!0){var x=m.value;g.index++;var C=s(x,g);l[u++]=h(C[0]),l[u++]=h(C[1])}}catch(e){y=!0,v=e}finally{try{f||null==b.return||b.return()}finally{if(y)throw v}}}else e.value=new Float32Array(2)}}]),t}(u.a);v.layerName="ScatterplotLayer",v.defaultProps=y},1142:function(e,t,i){"use strict";i.r(t);var n=i(1),o=i.n(n),r=i(0),a=i.n(r),s=i(945),l=i(946),c=i(948),u=i(947),d=i(949),p=i(1043),g=i(1046),h=i(1022),f=i(1145),y=i(1045),v=i(966);function m(e,t,i){var n=e.type,o=e.coordinates,r=t.pointFeatures,a=t.lineFeatures,s=t.polygonFeatures,l=t.polygonOutlineFeatures;if(function(e,t){var i=x[e];v.a.assert(i,"Unknown GeoJSON type ".concat(e));for(;t&&--i>0;)t=t[0];return t&&Number.isFinite(t[0])}(n,o))switch(n){case"Point":r.push({geometry:e,sourceFeature:i});break;case"MultiPoint":o.forEach((function(e){r.push({geometry:{type:"Point",coordinates:e},sourceFeature:i})}));break;case"LineString":a.push({geometry:e,sourceFeature:i});break;case"MultiLineString":o.forEach((function(e){a.push({geometry:{type:"LineString",coordinates:e},sourceFeature:i})}));break;case"Polygon":s.push({geometry:e,sourceFeature:i}),o.forEach((function(e){l.push({geometry:{type:"LineString",coordinates:e},sourceFeature:i})}));break;case"MultiPolygon":o.forEach((function(e){s.push({geometry:{type:"Polygon",coordinates:e},sourceFeature:i}),e.forEach((function(e){l.push({geometry:{type:"LineString",coordinates:e},sourceFeature:i})}))}))}else v.a.warn("".concat(n," coordinates are malformed"))()}function b(e){return e.sourceFeature.feature}var x={Point:1,MultiPoint:2,LineString:2,MultiLineString:3,Polygon:3,MultiPolygon:4};var C=new f.a,P={stroked:!0,filled:!0,extruded:!1,wireframe:!1,lineWidthUnits:"meters",lineWidthScale:1,lineWidthMinPixels:0,lineWidthMaxPixels:Number.MAX_SAFE_INTEGER,lineJointRounded:!1,lineMiterLimit:4,elevationScale:1,pointRadiusScale:1,pointRadiusMinPixels:0,pointRadiusMaxPixels:Number.MAX_SAFE_INTEGER,lineDashJustified:!1,fp64:!1,getLineColor:{type:"accessor",value:[0,0,0,255]},getFillColor:{type:"accessor",value:[0,0,0,255]},getRadius:{type:"accessor",value:1},getLineWidth:{type:"accessor",value:1},getLineDashArray:{type:"accessor",value:[0,0]},getElevation:{type:"accessor",value:1e3},material:C};function S(e){return e.geometry.coordinates}function L(e){return"function"!=typeof e?e:function(t){return e(b(t))}}var w=function(e){function t(){return Object(s.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(l.a)(t,[{key:"initializeState",value:function(){this.state={features:{}}}},{key:"updateState",value:function(e){e.oldProps;var t=e.props;if(e.changeFlags.dataChanged){var i=function(e){if(Array.isArray(e))return e;switch(v.a.assert(e.type,"GeoJSON does not have type"),e.type){case"Feature":return[e];case"FeatureCollection":return v.a.assert(Array.isArray(e.features),"GeoJSON does not have features array"),e.features;default:return[{geometry:e}]}}(t.data);this.state.features=function(e){for(var t={pointFeatures:[],lineFeatures:[],polygonFeatures:[],polygonOutlineFeatures:[]},i=0;i<e.length;i++){var n=e[i];v.a.assert(n&&n.geometry,"GeoJSON does not have geometry");var o=n.geometry,r={feature:n,index:i};if("GeometryCollection"===o.type){v.a.assert(Array.isArray(o.geometries),"GeoJSON does not have geometries array");for(var a=o.geometries,s=0;s<a.length;s++){m(a[s],t,r)}}else m(o,t,r)}return t}(i)}}},{key:"getPickingInfo",value:function(e){var t,i=e.info;e.sourceLayer;return Object.assign(i,{object:i.object?b(i.object):i.object,index:i.object?(t=i.object,t.sourceFeature.index):i.index})}},{key:"renderLayers",value:function(){var e=this.state.features,t=e.pointFeatures,i=e.lineFeatures,n=e.polygonFeatures,o=e.polygonOutlineFeatures,r=this.props,a=r.stroked,s=r.filled,l=r.extruded,c=r.wireframe,u=r.material,d=r.transitions,p=this.props,f=p.lineWidthUnits,v=p.lineWidthScale,m=p.lineWidthMinPixels,b=p.lineWidthMaxPixels,x=p.lineJointRounded,C=p.lineMiterLimit,P=p.pointRadiusScale,w=p.pointRadiusMinPixels,k=p.pointRadiusMaxPixels,F=p.elevationScale,j=p.lineDashJustified,M=p.fp64,R=this.props,W=R.getLineColor,_=R.getFillColor,A=R.getRadius,O=R.getLineWidth,E=R.getLineDashArray,T=R.getElevation,N=R.updateTriggers,I=this.getSubLayerClass("polygons-fill",y.a),D=this.getSubLayerClass("polygons-stroke",h.a),U=this.getSubLayerClass("line-strings",h.a),V=this.getSubLayerClass("points",g.a),z=this.shouldRenderSubLayer("polygons-fill",n)&&new I({fp64:M,extruded:l,elevationScale:F,filled:s,wireframe:c,material:u,getElevation:L(T),getFillColor:L(_),getLineColor:L(W),transitions:d&&{getPolygon:d.geometry,getElevation:d.getElevation,getFillColor:d.getFillColor,getLineColor:d.getLineColor}},this.getSubLayerProps({id:"polygons-fill",updateTriggers:{getElevation:N.getElevation,getFillColor:N.getFillColor,getLineColor:N.getLineColor}}),{data:n,getPolygon:S});return[!l&&z,!l&&a&&this.shouldRenderSubLayer("polygons-stroke",o)&&new D({fp64:M,widthUnits:f,widthScale:v,widthMinPixels:m,widthMaxPixels:b,rounded:x,miterLimit:C,dashJustified:j,getColor:L(W),getWidth:L(O),getDashArray:L(E),transitions:d&&{getPath:d.geometry,getColor:d.getLineColor,getWidth:d.getLineWidth}},this.getSubLayerProps({id:"polygons-stroke",updateTriggers:{getColor:N.getLineColor,getWidth:N.getLineWidth,getDashArray:N.getLineDashArray}}),{data:o,getPath:S}),this.shouldRenderSubLayer("linestrings",i)&&new U({fp64:M,widthUnits:f,widthScale:v,widthMinPixels:m,widthMaxPixels:b,rounded:x,miterLimit:C,dashJustified:j,getColor:L(W),getWidth:L(O),getDashArray:L(E),transitions:d&&{getPath:d.geometry,getColor:d.getLineColor,getWidth:d.getLineWidth}},this.getSubLayerProps({id:"line-strings",updateTriggers:{getColor:N.getLineColor,getWidth:N.getLineWidth,getDashArray:N.getLineDashArray}}),{data:i,getPath:S}),this.shouldRenderSubLayer("points",t)&&new V({fp64:M,stroked:a,filled:s,radiusScale:P,radiusMinPixels:w,radiusMaxPixels:k,lineWidthUnits:f,lineWidthScale:v,lineWidthMinPixels:m,lineWidthMaxPixels:b,getFillColor:L(_),getLineColor:L(W),getRadius:L(A),getLineWidth:L(O),transitions:d&&{getPosition:d.geometry,getFillColor:d.getFillColor,getLineColor:d.getLineColor,getRadius:d.getRadius,getLineWidth:d.getLineWidth}},this.getSubLayerProps({id:"points",updateTriggers:{getFillColor:N.getFillColor,getLineColor:N.getLineColor,getRadius:N.getRadius,getLineWidth:N.getLineWidth}}),{data:t,getPosition:S}),l&&z]}}]),t}(p.a);w.layerName="GeoJsonLayer",w.defaultProps=P;var k=i(970),F=i(965),j=i(956),M=i(962),R=i(964);function W(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function _(){return(_=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n])}return e}).apply(this,arguments)}i.d(t,"getLayer",(function(){return I}));const A={fillColor:"fillColor",color:"fillColor",fill:"fillColor","fill-color":"fillColor",strokeColor:"strokeColor","stroke-color":"strokeColor","stroke-width":"strokeWidth"},O=(e,t)=>{const i={};return Object.keys(e).forEach(t=>{t in A?i[A[t]]=e[t]:i[t]=e[t]}),"string"==typeof e.fillColor&&(i.fillColor=Object(F.hexToRGB)(e.fillColor)),"string"==typeof e.strokeColor&&(i.strokeColor=Object(F.hexToRGB)(e.strokeColor)),_({},i,{},t)};let E;const T=(e,t,i)=>{if(e&&e.features&&e.features.forEach(n=>{T(n,t,e.extraProps||i)}),e&&e.geometry){const n=_({},e,{properties:O(e.properties,t)});n.extraProps||(n.extraProps=i),E.push(n)}};function N(e){return e.object.extraProps&&o.a.createElement("div",{className:"deckgl-tooltip"},Object.keys(e.object.extraProps).map((t,i)=>o.a.createElement(R.a,{key:"prop-"+i,label:t+": ",value:""+e.object.extraProps[t]})))}function I(e,t,i,n){const o=e,r=o.fill_color_picker,a=o.stroke_color_picker,s=[r.r,r.g,r.b,255*r.a],l=[a.r,a.g,a.b,255*a.a],c={};let u;return s[3]>0&&(c.fillColor=s),l[3]>0&&(c.strokeColor=l),E=[],T(t.data,c),o.js_data_mutator&&(u=Object(j.a)(o.js_data_mutator),E=u(E)),new w(_({id:"geojson-layer-"+o.slice_id,filled:o.filled,data:E,stroked:o.stroked,extruded:o.extruded,pointRadiusScale:o.point_radius_scale},Object(M.a)(o,n,N)))}const D={formData:a.a.object.isRequired,payload:a.a.object.isRequired,setControlValue:a.a.func.isRequired,viewport:a.a.object.isRequired,onAddFilter:a.a.func},U={onAddFilter(){}};class V extends o.a.Component{constructor(){super(...arguments),W(this,"containerRef",o.a.createRef()),W(this,"setTooltip",e=>{const{current:t}=this.containerRef;t&&t.setTooltip(e)})}render(){const{formData:e,payload:t,setControlValue:i,onAddFilter:n,viewport:r}=this.props,a=I(e,t,0,this.setTooltip);return o.a.createElement(k.a,{ref:this.containerRef,mapboxApiAccessToken:t.data.mapboxApiKey,viewport:r,layers:[a],mapStyle:e.mapbox_style,setControlValue:i})}}V.propTypes=D,V.defaultProps=U;t.default=V},956:function(e,t,i){"use strict";i.d(t,"a",(function(){return d}));var n=i(1010),o=i.n(n),r=i(1011),a=i.n(r),s=i(953),l=i(965);function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n])}return e}).apply(this,arguments)}const u={console:console,_:a(),colors:l,d3array:s};function d(e,t,i){const n={},r="SAFE_EVAL_"+Math.floor(1e6*Math.random());n[r]={};const a=r+"="+e,s=c({},u,{},t);Object.keys(s).forEach(e=>{n[e]=s[e]});try{return o.a.runInNewContext(a,n,i),n[r]}catch(e){return()=>e}}},962:function(e,t,i){"use strict";i.d(t,"a",(function(){return r})),i.d(t,"b",(function(){return s}));var n=i(953),o=i(956);function r(e,t,i,n){const r=e;let a,s,l=i;return r.js_tooltip&&(l=Object(o.a)(r.js_tooltip)),l&&(a=e=>{e.picked?t({content:l(e),x:e.x,y:e.y}):t(null)}),r.js_onclick_href?s=e=>{const t=Object(o.a)(r.js_onclick_href)(e);window.open(t)}:r.table_filter&&void 0!==n&&(s=e=>n(e.object[r.line_column])),{onClick:s,onHover:a,pickable:Boolean(a)}}const a={p1:.01,p5:.05,p95:.95,p99:.99};function s(e,t){if(void 0===e&&(e="sum"),void 0===t&&(t=null),"count"===e)return e=>e.length;let i;return i=e in a?(i,o)=>{let r;return r=t?i.sort((e,i)=>n.ascending(t(e),t(i))):i.sort(n.ascending),n.quantile(r,a[e],o)}:n[e],t?e=>i(e.map(e=>t(e))):e=>i(e)}},964:function(e,t,i){"use strict";i.d(t,"a",(function(){return l}));var n=i(1),o=i.n(n),r=i(0),a=i.n(r);const s={label:a.a.string.isRequired,value:a.a.string.isRequired};class l extends o.a.PureComponent{render(){const{label:e,value:t}=this.props;return o.a.createElement("div",null,e,o.a.createElement("strong",null,t))}}l.propTypes=s},965:function(e,t,i){"use strict";i.r(t),i.d(t,"hexToRGB",(function(){return o}));var n=i(17);function o(e,t){if(void 0===t&&(t=255),!e)return[0,0,0,t];const{r:i,g:o,b:r}=Object(n.g)(e);return[i,o,r,t]}},970:function(e,t,i){"use strict";var n=i(1),o=i.n(n),r=i(0),a=i.n(r),s=i(1020),l=i(1292),c=i(488),u=i(1012);function d(e){const{tooltip:t}=e;if(null==t)return null;const{x:i,y:r,content:a}=t,s=Object(n.useMemo)(()=>({position:"absolute",top:r+"px",left:i+"px",padding:"8px",margin:"8px",background:"rgba(0, 0, 0, 0.8)",color:"#fff",maxWidth:"300px",fontSize:"12px",zIndex:9,pointerEvents:"none"}),[i,r]);if("string"==typeof a){const e=Object(n.useMemo)(()=>({__html:Object(u.filterXSS)(a,{stripIgnoreTag:!0})}),[a]);return o.a.createElement("div",{style:s},o.a.createElement("div",{dangerouslySetInnerHTML:e}))}return o.a.createElement("div",{style:s},a)}i(1013),i(984);function p(){const e=function(e,t){t||(t=e.slice(0));return e.raw=t,e}(["\n  .deckgl-tooltip > div {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n"]);return p=function(){return e},e}const g={viewport:a.a.object.isRequired,layers:a.a.array.isRequired,setControlValue:a.a.func,mapStyle:a.a.string,mapboxApiAccessToken:a.a.string.isRequired,children:a.a.node,bottomMargin:a.a.number,width:a.a.number.isRequired,height:a.a.number.isRequired};class h extends o.a.Component{constructor(e){var t,i,n;super(e),n=e=>{this.setState({tooltip:e})},(i="setTooltip")in(t=this)?Object.defineProperty(t,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[i]=n,this.tick=this.tick.bind(this),this.onViewStateChange=this.onViewStateChange.bind(this),this.state={timer:setInterval(this.tick,250),tooltip:null,viewState:e.viewport}}componentWillUnmount(){clearInterval(this.state.timer)}onViewStateChange(e){let{viewState:t}=e;this.setState({viewState:t,lastUpdate:Date.now()})}tick(){const{lastUpdate:e}=this.state;if(e&&Date.now()-e>250){const e=this.props.setControlValue;e&&e("viewport",this.state.viewState),this.setState({lastUpdate:null})}}layers(){return this.props.layers.some(e=>"function"==typeof e)?this.props.layers.map(e=>"function"==typeof e?e():e):this.props.layers}render(){const{children:e,bottomMargin:t,height:i,width:n}=this.props,{viewState:r,tooltip:a}=this.state,c=i-t,u=this.layers();return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{style:{position:"relative",width:n,height:c}},o.a.createElement(l.a,{initWebGLParameters:!0,controller:!0,width:n,height:c,layers:u,viewState:r,glOptions:{preserveDrawingBuffer:!0},onViewStateChange:this.onViewStateChange},o.a.createElement(s.a,{preserveDrawingBuffer:!0,mapStyle:this.props.mapStyle,mapboxApiAccessToken:this.props.mapboxApiAccessToken})),e),o.a.createElement(d,{tooltip:a}))}}h.propTypes=g,h.defaultProps={mapStyle:"light",setControlValue:()=>{},children:null,bottomMargin:0};t.a=Object(c.a)(h)(p())},984:function(e,t,i){var n=i(466),o=i(985);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var r={insert:"head",singleton:!1},a=(n(o,r),o.locals?o.locals:{});e.exports=a},985:function(e,t,i){(t=i(467)(!1)).push([e.i,'/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * "License"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n.deckgl-tooltip > div {\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n',""]),e.exports=t}}]);