(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{1021:function(e,t,n){"use strict";var o=n(63),i=n(922),r=n(36),s=n(462),c=n(461),a=n(941),l=n(942);class u extends l.a{constructor(e){super(e=>this.format(e));const{id:t=Object(a.a)("config.id"),label:n,description:o="",formatFunc:i=Object(a.a)("config.formatFunc"),isInvalid:r=!1}=e;this.id=t,this.label=null!=n?n:t,this.description=o,this.formatFunc=i,this.isInvalid=r}format(e){return null==e||Number.isNaN(e)?`${e}`:e===Number.POSITIVE_INFINITY?"∞":e===Number.NEGATIVE_INFINITY?"-∞":this.formatFunc(e)}preview(e=12345.432){return`${e} => ${this.format(e)}`}}var d=u;var p={DOLLAR:"$,.2f",DOLLAR_ROUND:"$,d",DOLLAR_ROUND_SIGNED:"+$,d",DOLLAR_SIGNED:"+$,.2f",FLOAT:",.2f",FLOAT_1_POINT:",.1f",FLOAT_2_POINT:",.2f",FLOAT_3_POINT:",.3f",FLOAT_SIGNED:"+,.2f",FLOAT_SIGNED_1_POINT:"+,.1f",FLOAT_SIGNED_2_POINT:"+,.2f",FLOAT_SIGNED_3_POINT:"+,.3f",INTEGER:",d",INTEGER_SIGNED:"+,d",PERCENT:",.2%",PERCENT_1_POINT:",.1%",PERCENT_2_POINT:",.2%",PERCENT_3_POINT:",.3%",PERCENT_SIGNED:"+,.2%",PERCENT_SIGNED_1_POINT:"+,.1%",PERCENT_SIGNED_2_POINT:"+,.2%",PERCENT_SIGNED_3_POINT:"+,.3%",SI:".3s",SI_1_DIGIT:".1s",SI_2_DIGIT:".2s",SI_3_DIGIT:".3s",SMART_NUMBER:"SMART_NUMBER",SMART_NUMBER_SIGNED:"SMART_NUMBER_SIGNED"};const f=Object(s.a)(".3~s"),_=Object(s.a)(".2~f"),g=Object(s.a)(".4~f");function v(e={}){const{description:t,signed:n=!1,id:o,label:i}=e,r=n?e=>e>0?"+":"":()=>"";return new d({description:t,formatFunc:e=>`${r(e)}${function(e){if(0===e)return"0";const t=Math.abs(e);return t>=1e3?f(e).replace("G","B"):t>=1?_(e):t>=.001?g(e):t>1e-6?`${f(1e6*e)}µ`:f(e)}(e)}`,id:o||n?p.SMART_NUMBER_SIGNED:p.SMART_NUMBER,label:null!=i?i:"Adaptive formatter"})}class h extends i.a{constructor(){super({name:"NumberFormatter",overwritePolicy:r.a.WARN}),this.registerValue(p.SMART_NUMBER,v()),this.registerValue(p.SMART_NUMBER_SIGNED,v({signed:!0})),this.setDefaultKey(p.SMART_NUMBER)}get(e){const t=`${null==e||""===e?this.defaultKey:e}`.trim();if(this.has(t))return super.get(t);const n=function(e){const{description:t,formatString:n=Object(a.a)("config.formatString"),label:o,locale:i}=e;let r,l=!1;try{r=void 0===i?Object(s.a)(n):Object(c.a)(i).format(n)}catch(e){r=e=>`${e} (Invalid format: ${n})`,l=!0}return new d({description:t,formatFunc:r,id:n,isInvalid:l,label:o})}({formatString:t});return this.registerValue(t,n),n}format(e,t){return this.get(e)(t)}}n.d(t,"a",(function(){return x}));const m=Object(o.a)(h);function x(e,t){return m().format(e,t)}},1267:function(e,t,n){"use strict";var o=n(945),i=n(946),r=n(948),s=n(947),c=n(958),a=n(949),l=n(1030),u=n(1005),d=n(1294),p=n(1136),f=n(1071),_="#define SHADER_NAME arc-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n  gl_FragColor = picking_filterHighlightColor(gl_FragColor);\n  gl_FragColor = picking_filterPickingColor(gl_FragColor);\n}\n";n.d(t,"a",(function(){return m}));var g=d.a.fp64LowPart,v=[0,0,0,255],h={fp64:!1,getSourcePosition:{type:"accessor",value:function(e){return e.sourcePosition}},getTargetPosition:{type:"accessor",value:function(e){return e.targetPosition}},getSourceColor:{type:"accessor",value:v},getTargetColor:{type:"accessor",value:v},getWidth:{type:"accessor",value:1},getHeight:{type:"accessor",value:1},getTilt:{type:"accessor",value:0},widthUnits:"pixels",widthScale:{type:"number",value:1,min:0},widthMinPixels:{type:"number",value:0,min:0},widthMaxPixels:{type:"number",value:Number.MAX_SAFE_INTEGER,min:0},getStrokeWidth:{deprecatedFor:"getWidth"}},m=function(e){function t(){return Object(o.a)(this,t),Object(r.a)(this,Object(s.a)(t).apply(this,arguments))}return Object(a.a)(t,e),Object(i.a)(t,[{key:"getShaders",value:function(){return this.use64bitProjection()?{vs:"#define SHADER_NAME arc-layer-vertex-shader-64\n\nattribute vec3 positions;\nattribute vec4 instanceSourceColors;\nattribute vec4 instanceTargetColors;\n\nattribute vec4 instancePositions;\nattribute vec4 instancePositions64Low;\n\nattribute vec3 instancePickingColors;\nattribute float instanceWidths;\n\nuniform float numSegments;\nuniform float opacity;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\n\nvarying vec4 vColor;\n\nvec2 paraboloid_fp64(vec2 source[2], vec2 target[2], float ratio) {\n\n  vec2 x[2];\n  vec2_mix_fp64(source, target, ratio, x);\n  vec2 center[2];\n  vec2_mix_fp64(source, target, 0.5, center);\n\n  vec2 dSourceCenter = vec2_distance_fp64(source, center);\n  vec2 dXCenter = vec2_distance_fp64(x, center);\n  return mul_fp64(sum_fp64(dSourceCenter, dXCenter), sub_fp64(dSourceCenter, dXCenter));\n}\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\n  vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\n  dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\n\n  vec2 offset_screenspace = dir_screenspace * offset_direction * width / 2.0;\n  vec2 offset_clipspace = project_pixel_size_to_clipspace(offset_screenspace);\n\n  return offset_clipspace;\n}\n\nfloat getSegmentRatio(float index) {\n  return smoothstep(0.0, 1.0, index / (numSegments - 1.0));\n}\n\nvoid get_pos_fp64(vec2 source[2], vec2 target[2], float segmentRatio, out vec2 position[4]) {\n\n  vec2 vertex_height = paraboloid_fp64(source, target, segmentRatio);\n\n  vec2 position_temp[2];\n\n  vec2_mix_fp64(source, target, segmentRatio, position_temp);\n\n  position[0] = position_temp[0];\n  position[1] = position_temp[1];\n\n  if (vertex_height.x < 0.0 || (vertex_height.x == 0.0 && vertex_height.y <= 0.0)) {\n    vertex_height = vec2(0.0, 0.0);\n  }\n\n  position[2] = sqrt_fp64(vertex_height);\n  position[3] = vec2(1.0, 0.0);\n}\n\nvoid main(void) {\n  vec2 projected_source_coord[2];\n  vec2 projected_target_coord[2];\n\n  project_position_fp64(instancePositions.xy, instancePositions64Low.xy, projected_source_coord);\n  project_position_fp64(instancePositions.zw, instancePositions64Low.zw, projected_target_coord);\n\n  float segmentIndex = positions.x;\n  float segmentRatio = getSegmentRatio(segmentIndex);\n  float indexDir = mix(-1.0, 1.0, step(segmentIndex, 0.0));\n  float nextSegmentRatio = getSegmentRatio(segmentIndex + indexDir);\n\n  vec2 curr_pos_modelspace[4];\n\n  get_pos_fp64(projected_source_coord, projected_target_coord, segmentRatio,\n    curr_pos_modelspace);\n\n  vec2 next_pos_modelspace[4];\n\n  get_pos_fp64(projected_source_coord, projected_target_coord, nextSegmentRatio,\n    next_pos_modelspace);\n\n  vec4 curr_pos_clipspace = project_common_position_to_clipspace_fp64(curr_pos_modelspace);\n  vec4 next_pos_clipspace = project_common_position_to_clipspace_fp64(next_pos_modelspace);\n  float widthPixels = clamp(\n    project_size_to_pixel(instanceWidths * widthScale),\n    widthMinPixels, widthMaxPixels\n  );\n\n  vec2 offset = getExtrusionOffset(next_pos_clipspace.xy - curr_pos_clipspace.xy, positions.y, widthPixels);\n\n  gl_Position = curr_pos_clipspace + vec4(offset, 0.0, 0.0);\n\n  vec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio) / 255.;\n  vColor = vec4(color.rgb, color.a * opacity);\n  picking_setPickingColor(instancePickingColors);\n}\n",fs:_,modules:["project64","picking"]}:{vs:"#define SHADER_NAME arc-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec4 instanceSourceColors;\nattribute vec4 instanceTargetColors;\nattribute vec4 instancePositions;\nattribute vec4 instancePositions64Low;\nattribute vec3 instancePickingColors;\nattribute float instanceWidths;\nattribute float instanceHeights;\nattribute float instanceTilts;\n\nuniform float numSegments;\nuniform float opacity;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\n\nvarying vec4 vColor;\n\nfloat paraboloid(vec2 source, vec2 target, float ratio) {\n\n  vec2 x = mix(source, target, ratio);\n  vec2 center = mix(source, target, 0.5);\n\n  float dSourceCenter = distance(source, center);\n  float dXCenter = distance(x, center);\n  return (dSourceCenter + dXCenter) * (dSourceCenter - dXCenter);\n}\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\n  vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\n  dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\n\n  vec2 offset_screenspace = dir_screenspace * offset_direction * width / 2.0;\n  vec2 offset_clipspace = project_pixel_size_to_clipspace(offset_screenspace);\n\n  return offset_clipspace;\n}\n\nfloat getSegmentRatio(float index) {\n  return smoothstep(0.0, 1.0, index / (numSegments - 1.0));\n}\n\nvec3 getPos(vec2 source, vec2 target, float segmentRatio) {\n  float vertexHeight = sqrt(max(0.0, paraboloid(source, target, segmentRatio))) * instanceHeights;\n\n  float tiltAngle = radians(instanceTilts);\n  vec2 tiltDirection = normalize(target - source);\n  vec2 tilt = vec2(-tiltDirection.y, tiltDirection.x) * vertexHeight * sin(tiltAngle);\n\n  return vec3(\n    mix(source, target, segmentRatio) + tilt,\n    vertexHeight * cos(tiltAngle)\n  );\n}\n\nvoid main(void) {\n  vec2 source = project_position(vec3(instancePositions.xy, 0.0), instancePositions64Low.xy).xy;\n  vec2 target = project_position(vec3(instancePositions.zw, 0.0), instancePositions64Low.zw).xy;\n\n  float segmentIndex = positions.x;\n  float segmentRatio = getSegmentRatio(segmentIndex);\n  float indexDir = mix(-1.0, 1.0, step(segmentIndex, 0.0));\n  float nextSegmentRatio = getSegmentRatio(segmentIndex + indexDir);\n\n  vec3 currPos = getPos(source, target, segmentRatio);\n  vec3 nextPos = getPos(source, target, nextSegmentRatio);\n  vec4 curr = project_common_position_to_clipspace(vec4(currPos, 1.0));\n  vec4 next = project_common_position_to_clipspace(vec4(nextPos, 1.0));\n  float widthPixels = clamp(\n    project_size_to_pixel(instanceWidths * widthScale),\n    widthMinPixels, widthMaxPixels\n  );\n  vec2 offset = getExtrusionOffset((next.xy - curr.xy) * indexDir, positions.y, widthPixels);\n  gl_Position = curr + vec4(offset, 0.0, 0.0);\n\n  vec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio) / 255.;\n  vColor = vec4(color.rgb, color.a * opacity);\n  picking_setPickingColor(instancePickingColors);\n}\n",fs:_,modules:["picking"]}}},{key:"initializeState",value:function(){this.getAttributeManager().addInstanced({instancePositions:{size:4,transition:!0,accessor:["getSourcePosition","getTargetPosition"],update:this.calculateInstancePositions},instancePositions64Low:{size:4,accessor:["getSourcePosition","getTargetPosition"],update:this.calculateInstancePositions64Low},instanceSourceColors:{size:4,type:5121,transition:!0,accessor:"getSourceColor",defaultValue:v},instanceTargetColors:{size:4,type:5121,transition:!0,accessor:"getTargetColor",defaultValue:v},instanceWidths:{size:1,transition:!0,accessor:"getWidth",defaultValue:1},instanceHeights:{size:1,transition:!0,accessor:"getHeight",defaultValue:1},instanceTilts:{size:1,transition:!0,accessor:"getTilt",defaultValue:0}})}},{key:"updateState",value:function(e){var n=e.props,o=e.oldProps,i=e.changeFlags;if(Object(c.a)(Object(s.a)(t.prototype),"updateState",this).call(this,{props:n,oldProps:o,changeFlags:i}),n.fp64!==o.fp64){var r=this.context.gl;this.state.model&&this.state.model.delete(),this.setState({model:this._getModel(r)}),this.getAttributeManager().invalidateAll()}}},{key:"draw",value:function(e){var t=e.uniforms,n=this.context.viewport,o=this.props,i=o.widthUnits,r=o.widthScale,s=o.widthMinPixels,c=o.widthMaxPixels,a="pixels"===i?n.distanceScales.metersPerPixel[2]:1;this.state.model.setUniforms(Object.assign({},t,{widthScale:r*a,widthMinPixels:s,widthMaxPixels:c})).draw()}},{key:"_getModel",value:function(e){for(var t=[],n=0;n<50;n++)t=t.concat([n,-1,0,n,1,0]);var o=new p.a(e,Object.assign({},this.getShaders(),{id:this.props.id,geometry:new f.a({drawMode:5,attributes:{positions:new Float32Array(t)}}),isInstanced:!0,shaderCache:this.context.shaderCache}));return o.setUniforms({numSegments:50}),o}},{key:"calculateInstancePositions",value:function(e,t){var n=t.startRow,o=t.endRow,i=this.props,r=i.data,s=i.getSourcePosition,c=i.getTargetPosition,a=e.value,u=n*e.size,d=Object(l.a)(r,n,o),p=d.iterable,f=d.objectInfo,_=!0,g=!1,v=void 0;try{for(var h,m=p[Symbol.iterator]();!(_=(h=m.next()).done);_=!0){var x=h.value;f.index++;var P=s(x,f);a[u++]=P[0],a[u++]=P[1];var S=c(x,f);a[u++]=S[0],a[u++]=S[1]}}catch(e){g=!0,v=e}finally{try{_||null==m.return||m.return()}finally{if(g)throw v}}}},{key:"calculateInstancePositions64Low",value:function(e,t){var n=t.startRow,o=t.endRow,i=this.use64bitPositions();if(e.constant=!i,i){var r=this.props,s=r.data,c=r.getSourcePosition,a=r.getTargetPosition,u=e.value,d=n*e.size,p=Object(l.a)(s,n,o),f=p.iterable,_=p.objectInfo,v=!0,h=!1,m=void 0;try{for(var x,P=f[Symbol.iterator]();!(v=(x=P.next()).done);v=!0){var S=x.value;_.index++;var w=c(S,_);u[d++]=g(w[0]),u[d++]=g(w[1]);var b=a(S,_);u[d++]=g(b[0]),u[d++]=g(b[1])}}catch(e){h=!0,m=e}finally{try{v||null==P.return||P.return()}finally{if(h)throw m}}}else e.value=new Float32Array(4)}}]),t}(u.a);m.layerName="ArcLayer",m.defaultProps=h},471:function(e,t,n){"use strict";var o={};n.r(o),n.d(o,"default",(function(){return u})),n.d(o,"DEFAULT_NAMESPACE",(function(){return p})),n.d(o,"getNamespace",(function(){return f})),n.d(o,"getColor",(function(){return _})),n.d(o,"getScale",(function(){return g}));var i=n(140),r=n(942);function s(e){return String(e).trim()}class c extends r.a{constructor(e,t){super(e=>this.getColor(e)),this.colors=e,this.scale=Object(i.a)(),this.scale.range(e),this.parentForcedColors=t,this.forcedColors={}}getColor(e){const t=s(e),n=this.parentForcedColors&&this.parentForcedColors[t];if(n)return n;const o=this.forcedColors[t];return o||this.scale(t)}setColor(e,t){return this.forcedColors[s(e)]=t,this}getColorMap(){const e={};return this.scale.domain().forEach(t=>{e[t.toString()]=this.scale(t)}),{...e,...this.forcedColors,...this.parentForcedColors}}copy(){const e=new c(this.scale.range(),this.parentForcedColors);return e.forcedColors={...this.forcedColors},e.domain(this.domain()),e.unknown(this.unknown()),e}domain(e){return void 0===e?this.scale.domain():(this.scale.domain(e),this)}range(e){return void 0===e?this.scale.range():(this.colors=e,this.scale.range(e),this)}unknown(e){return void 0===e?this.scale.unknown():(this.scale.unknown(e),this)}}var a=c,l=n(469);class u{constructor(e){this.name=e,this.scales={},this.forcedItems={}}getScale(e){var t,n;const o=null!=(t=null!=e?e:Object(l.a)().getDefaultKey())?t:"",i=this.scales[o];if(i)return i;const r=Object(l.a)().get(o),s=new a(null!=(n=null==r?void 0:r.colors)?n:[],this.forcedItems);return this.scales[o]=s,s}setColor(e,t){return this.forcedItems[s(e)]=t,this}}const d={},p="GLOBAL";function f(e=p){const t=d[e];if(t)return t;const n=new u(e);return d[e]=n,n}function _(e,t,n){return f(n).getScale(t).getColor(e)}function g(e,t){return f(t).getScale(e)}n.d(t,"a",(function(){return o}))}}]);